{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function LoginScreen() {\n  var _useState = useState(\"Home\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTab = _useState2[0],\n    setSelectedTab = _useState2[1];\n  var handleTabPress = function handleTabPress(tabName) {\n    setSelectedTab(tabName);\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: \"홈\",\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(Icon, {\n              name: \"home\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        options: {\n          title: \"알림\",\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            return _jsx(Icon, {\n              name: \"notifications\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Notification\",\n        component: NotificationScreen,\n        options: {\n          title: \"검색\",\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(Icon, {\n              name: \"search\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Message\",\n        component: MessageScreen,\n        options: {\n          title: \"메시지\",\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n              size = _ref4.size;\n            return _jsx(Icon, {\n              name: \"message\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    height: 50,\n    backgroundColor: \"#f2f2f2\"\n  },\n  tabItem: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 10\n  },\n  tabItemSelected: {\n    borderBottomWidth: 2,\n    borderBottomColor: \"#333\"\n  },\n  tabTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#333\",\n    width: 85\n  },\n  tabContent: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TextInput","TouchableOpacity","NavigationContainer","createBottomTabNavigator","Icon","jsx","_jsx","jsxs","_jsxs","Tab","LoginScreen","_useState","_useState2","_slicedToArray","selectedTab","setSelectedTab","handleTabPress","tabName","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","options","title","tabBarIcon","_ref","color","size","SearchScreen","_ref2","NotificationScreen","_ref3","MessageScreen","_ref4","styles","create","container","flex","backgroundColor","alignItems","justifyContent","tabBar","flexDirection","height","tabItem","padding","tabItemSelected","borderBottomWidth","borderBottomColor","tabTitle","fontSize","fontWeight","width","tabContent"],"sources":["C:/React-Expo/AwesomeProject/component/TabPages.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function LoginScreen() {\r\n  const [selectedTab, setSelectedTab] = useState(\"Home\");\r\n\r\n  const handleTabPress = (tabName) => {\r\n    setSelectedTab(tabName);\r\n  };\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator initialRouteName='Home'>\r\n        <Tab.Screen\r\n          name='Home'\r\n          component={HomeScreen}\r\n          options={{\r\n            title: \"홈\",\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Icon name='home' color={color} size={size} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name='Search'\r\n          component={SearchScreen}\r\n          options={{\r\n            title: \"알림\",\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Icon name='notifications' color={color} size={size} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name='Notification'\r\n          component={NotificationScreen}\r\n          options={{\r\n            title: \"검색\",\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Icon name='search' color={color} size={size} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name='Message'\r\n          component={MessageScreen}\r\n          options={{\r\n            title: \"메시지\",\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Icon name='message' color={color} size={size} />\r\n            ),\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  tabBar: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    backgroundColor: \"#f2f2f2\",\r\n  },\r\n  tabItem: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n  },\r\n  tabItemSelected: {\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: \"#333\",\r\n  },\r\n  tabTitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: \"#333\",\r\n    width: 85,\r\n  },\r\n  tabContent: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}