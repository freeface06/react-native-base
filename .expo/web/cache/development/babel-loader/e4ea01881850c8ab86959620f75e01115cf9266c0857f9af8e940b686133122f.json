{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport LoginScreen from \"./LoginScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"Home\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedTab = _useState2[0],\n    setSelectedTab = _useState2[1];\n  var handleTabPress = function handleTabPress(tabName) {\n    setSelectedTab(tabName);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(LoginScreen, {}), _jsxs(View, {\n      style: styles.tabBar,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.tabItem, selectedTab === \"Home\" && styles.tabItemSelected],\n        onPress: function onPress() {\n          return handleTabPress(\"Home\");\n        },\n        children: _jsx(Text, {\n          style: styles.tabTitle,\n          children: \"Home\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.tabItem, selectedTab === \"Profile\" && styles.tabItemSelected],\n        onPress: function onPress() {\n          return handleTabPress(\"Profile\");\n        },\n        children: _jsx(Text, {\n          style: styles.tabTitle,\n          children: \"Profile\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.tabItem, selectedTab === \"Settings\" && styles.tabItemSelected],\n        onPress: function onPress() {\n          return handleTabPress(\"Settings\");\n        },\n        children: _jsx(Text, {\n          style: styles.tabTitle,\n          children: \"Settings\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.tabItem, selectedTab === \"Notifications\" && styles.tabItemSelected],\n        onPress: function onPress() {\n          return handleTabPress(\"Notifications\");\n        },\n        children: _jsx(Text, {\n          style: styles.tabTitle,\n          children: \"Notifications\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.tabContent,\n      children: [selectedTab === \"Home\" && _jsx(Text, {\n        children: \"Home screen\"\n      }), selectedTab === \"Profile\" && _jsx(Text, {\n        children: \"Profile screen\"\n      }), selectedTab === \"Settings\" && _jsx(Text, {\n        children: \"Settings screen\"\n      }), selectedTab === \"Notifications\" && _jsx(Text, {\n        children: \"Notifications screen\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    height: 50,\n    backgroundColor: \"#f2f2f2\"\n  },\n  tabItem: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 10\n  },\n  tabItemSelected: {\n    borderBottomWidth: 2,\n    borderBottomColor: \"#333\"\n  },\n  tabTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#333\"\n  },\n  tabContent: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","StatusBar","StyleSheet","View","Text","TextInput","TouchableOpacity","LoginScreen","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","selectedTab","setSelectedTab","handleTabPress","tabName","style","styles","container","children","tabBar","tabItem","tabItemSelected","onPress","tabTitle","tabContent","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","height","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color"],"sources":["C:/React-Expo/AwesomeProject/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\n\n// 페이지 import\nimport LoginScreen from \"./LoginScreen\";\n\nexport default function App() {\n  const [selectedTab, setSelectedTab] = useState(\"Home\");\n\n  const handleTabPress = (tabName) => {\n    setSelectedTab(tabName);\n  };\n\n  return (\n    <View style={styles.container}>\n      <LoginScreen />\n\n      <View style={styles.tabBar}>\n        <TouchableOpacity\n          style={[\n            styles.tabItem,\n            selectedTab === \"Home\" && styles.tabItemSelected,\n          ]}\n          onPress={() => handleTabPress(\"Home\")}\n        >\n          <Text style={styles.tabTitle}>Home</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.tabItem,\n            selectedTab === \"Profile\" && styles.tabItemSelected,\n          ]}\n          onPress={() => handleTabPress(\"Profile\")}\n        >\n          <Text style={styles.tabTitle}>Profile</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.tabItem,\n            selectedTab === \"Settings\" && styles.tabItemSelected,\n          ]}\n          onPress={() => handleTabPress(\"Settings\")}\n        >\n          <Text style={styles.tabTitle}>Settings</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.tabItem,\n            selectedTab === \"Notifications\" && styles.tabItemSelected,\n          ]}\n          onPress={() => handleTabPress(\"Notifications\")}\n        >\n          <Text style={styles.tabTitle}>Notifications</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.tabContent}>\n        {selectedTab === \"Home\" && <Text>Home screen</Text>}\n        {selectedTab === \"Profile\" && <Text>Profile screen</Text>}\n        {selectedTab === \"Settings\" && <Text>Settings screen</Text>}\n        {selectedTab === \"Notifications\" && <Text>Notifications screen</Text>}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tabBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    height: 50,\n    backgroundColor: \"#f2f2f2\",\n  },\n  tabItem: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 10,\n  },\n  tabItemSelected: {\n    borderBottomWidth: 2,\n    borderBottomColor: \"#333\",\n  },\n  tabTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#333\",\n  },\n  tabContent: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}