{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction LoginScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Input, {\n      placeholder: \"Email\",\n      leftIcon: _jsx(Icon, {\n        name: \"email\",\n        size: 24,\n        color: \"black\"\n      }),\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      leftIcon: _jsx(Icon, {\n        name: \"lock\",\n        size: 24,\n        color: \"black\"\n      }),\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(Button, {\n      title: \"\\uB85C\\uADF8\\uC778\",\n      onPress: handleLogin\n    }), _jsxs(Text, {\n      style: styles.signupText,\n      children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?\", \" \", _jsx(Text, {\n        style: styles.signupLink,\n        onPress: function onPress() {\n          return navigation.navigate(\"Signup\");\n        },\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      })]\n    })]\n  });\n}\nfunction SignupScreen() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uD654\\uBA74\"\n    })\n  });\n}\nexport default function Login() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  signupText: {\n    marginTop: 20\n  },\n  signupLink: {\n    color: \"blue\"\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","Input","Button","Icon","useNavigation","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","LoginScreen","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","style","styles","container","children","placeholder","leftIcon","name","size","color","value","onChangeText","secureTextEntry","title","onPress","signupText","signupLink","navigate","SignupScreen","Login","Navigator","Screen","component","create","flex","justifyContent","alignItems","backgroundColor","marginTop"],"sources":["C:/React-Expo/AwesomeProject/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Input, Button, Icon } from \"react-native-elements\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction LoginScreen() {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    // 로그인 버튼을 눌렀을 때 처리할 로직 작성\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Input\r\n        placeholder='Email'\r\n        leftIcon={<Icon name='email' size={24} color='black' />}\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <Input\r\n        placeholder='Password'\r\n        secureTextEntry={true}\r\n        leftIcon={<Icon name='lock' size={24} color='black' />}\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n      <Button title='로그인' onPress={handleLogin} />\r\n      <Text style={styles.signupText}>\r\n        계정이 없으신가요?{\" \"}\r\n        <Text\r\n          style={styles.signupLink}\r\n          onPress={() => navigation.navigate(\"Signup\")}\r\n        >\r\n          회원가입\r\n        </Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SignupScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>회원가입 화면</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function Login() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name='Login' component={LoginScreen} />\r\n      <Stack.Screen name='Signup' component={SignupScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  signupText: {\r\n    marginTop: 20,\r\n  },\r\n  signupLink: {\r\n    color: \"blue\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}